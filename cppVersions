C++ 11:
https://en.wikipedia.org/wiki/C++11


1. Rvalue references:
Lvalue and Rvalue refer to the left and right side of the assignment operator
lvalue: something that points to a specific memory location (variables)
rvalue: something that doesn't point anywhere
int x = 666;    x is lvalue, and 666 is rvalue.

A reference is something that points to an existing memory location

int global = 100;

int& setGlobal()
{
    return global;    
}

// ... somewhere in main() ...

setGlobal() = 400; // OK
Watch out for & here: it's not the address-of operator, it defines the type of what's returned (a reference).


Lvalue references: 
int y = 10;
int& yref = y;
yref++;        // y is now 11

Lvalue to rvalue conversion
int x = 1;
int y = 3;
int z = x + y;   // ok

forbidden conversion from rvalue to lvalue

Move semantics:

Range-based for loops
initializer lists
lambdas
smart pointers 

Standardized semantics for multithreaded programs:
