struct Node
{
    char key;
    vector<Node *> child;
};


int DiameterTree(Node* r)
{
    int d = 0;
    dfs(r, d);
    return d;
}

int DFS(Node* r, int& diameter)
{
    if (!r)
        return 0;
    int depth1=0, depth2=0;
    for(int i=0; i<r->child.size(); i++)
    {
        depth = DFS(r->child[i], diameter);
        if (depth > depth1)
        {
          depth1 = depth;
          depth2 = depth1;
        }
        else if (depth > depth2)
        {
          depth2 = depth;
        }
    }
    diameter = max(diameter, depth1+depth2);
    return depth1+1;
}
