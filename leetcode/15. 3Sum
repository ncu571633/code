
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note: The solution set must not contain duplicate triplets.

For example, given array S = [-1, 0, 1, 2, -1, -4],

    A solution set is:
    [
          [-1, 0, 1],
            [-1, -1, 2]
    ]


class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        set<vector<int>> ret;
        for (int i = 0; i < nums.size(); i++)
        {
            if (nums[i] > 0)
                break;
                
            int target = -nums[i];
            for (int j=i+1, k=nums.size()-1; j<k; )
            {
                if (nums[j] + nums[k] == target)
                {
                    ret.insert({nums[i], nums[j], nums[k]});
                    j++, k--;
                }
                else if (nums[j] + nums[k] < target)
                {
                    j++;
                }
                else
                {
                    k--;
                }
            }
        }

        return vector(ret.begin(), ret.end());
    }
};
