 Given a sorted linked list, delete all duplicates such that each element appear only once.

For example,
Given 1->1->2, return 1->2.
Given 1->1->2->3->3, return 1->2->3. 


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(!head)
            return head;
        ListNode *t = head;
        while(t && t->next) {
            if(t->val == t->next->val)
                t->next = t->next->next;
            else
                t = t->next;
        }
        return head;
    }
};

class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        for(ListNode* p = head; p!=nullptr;)
        {
            ListNode* t = p;
            while(t && t->val==p->val)
            {
                t=t->next;
            }
            p->next = t;
            p=t;
        }
        return head;
    }
};
