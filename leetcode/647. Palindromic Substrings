Given a string s, return the number of palindromic substrings in it.
A string is a palindrome when it reads the same backward as forward.
A substring is a contiguous sequence of characters within the string.

Example 1:
Input: s = "abc"
Output: 3
Explanation: Three palindromic strings: "a", "b", "c".

Example 2:
Input: s = "aaa"
Output: 6
Explanation: Six palindromic strings: "a", "a", "a", "aa", "aa", "aaa".

class Solution {
public:
    int countSubstrings(string s) {
        int ret = 0;
        for(int i=0; i<s.size(); i++)
        {
            helper(s, i, i, ret);
            helper(s, i, i+1, ret);
        }
        return ret;
    }

    void helper(const string& s, int b, int e, int& ret)
    {
        if(0 <= b && e < s.size() && s[b] == s[e])
        {
            ret ++;
            helper(s, b-1, e+1, ret);
        }
    }
};
