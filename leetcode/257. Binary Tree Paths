 Given a binary tree, return all root-to-leaf paths.

For example, given the following binary tree:

   1
 /   \
2     3
 \
  5

All root-to-leaf paths are:

["1->2->5", "1->3"]

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode* root, vector<string>& ret, string str)
    {
        if (!root)
        {
            return ;
        }

        str = str.empty()? to_string(root->val): str + "->" + to_string(root->val);
        if (root->left == nullptr && root->right == nullptr)
        {
            ret.push_back(str);
            return ;
        }

        helper(root->right, ret, str);
        helper(root->left, ret, str);
    }

    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> ret;
        string str;
        helper(root, ret, str);
        return ret;
    }
};
