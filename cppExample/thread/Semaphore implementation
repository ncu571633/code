#include <mutex>
#include <condition_variable>

class Semaphore {
    size_t avail;
    std::mutex m;
    std::condition_variable cv;
public:
    explicit Semaphore(int count = 0) : avail(count) {}

    void wait() {
        std::unique_lock<std::mutex> lk(m);
        cv.wait(lk, [this] { return avail > 0; });
        --avail;
    }

    void post() {
        std::lock_guard<std::mutex> lk(m);
        ++avail;
        cv.notify_one();
    }
};
