// A Min Heap Binary Tree is a Binary Tree where the root node has the minimum key in the tree.
// In C++ STL, the top element is always the greatest by default

// constructing priority queues
#include <iostream>       // std::cout
#include <queue>          // std::priority_queue
#include <vector>         // std::vector
#include <functional>     // std::greater

using namespace std;

class mycomparison
{
  bool reverse;
public:
  mycomparison(const bool& revparam=false)
    {reverse=revparam;}
  bool operator() (const int& lhs, const int&rhs) const
  {
    if (reverse) return (lhs>rhs);
    else return (lhs<rhs);
  }
};

int main ()
{
  int myints[]= {10,60,50,20};

  std::priority_queue<int> first;
  std::priority_queue<int> second (myints,myints+4);  // default: max heap
  std::priority_queue<int, std::vector<int>, std::greater<int>> third (myints,myints+4);  // min heap
  // using mycomparison:
  typedef std::priority_queue<int,std::vector<int>,mycomparison> mypq_type;

  mypq_type fourth;                       // less-than comparison
  mypq_type fifth (mycomparison(true));   // greater-than comparison

  while (!second.empty()) {
    cout << second.top() << ' ';
    second.pop();
  }
  cout<< endl;
  
  while (!third.empty()) {
    cout << third.top() << ' ';
    third.pop();
  }
  
  return 0;
}
